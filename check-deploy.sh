#!/bin/bash

# üîç Verificar Status do Deploy no Railway
echo "üöÇ Verificando Deploy do Fitness Scheduler"
echo "=========================================="
echo ""

# Cores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

cd "/Users/andremontenegro/agendamento claude code/fitness-scheduler"

echo -e "${BLUE}üìä Status do Projeto:${NC}"
railway status
echo ""

echo -e "${BLUE}üîó Links Importantes:${NC}"
echo "Dashboard: https://railway.app/dashboard"
echo "GitHub: https://github.com/decomontenegro/fitness-scheduler"
echo ""

echo -e "${YELLOW}üìù Checklist de Verifica√ß√£o:${NC}"
echo ""

# Verificar se o reposit√≥rio foi criado
echo -n "1. Reposit√≥rio GitHub criado? "
if git ls-remote origin HEAD > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Sim${NC}"
    echo "   ‚îî‚îÄ https://github.com/decomontenegro/fitness-scheduler"
else
    echo -e "${RED}‚ùå N√£o${NC}"
    echo "   ‚îî‚îÄ Crie em: https://github.com/new"
fi

# Verificar se o c√≥digo foi enviado
echo -n "2. C√≥digo enviado para GitHub? "
REMOTE_COMMIT=$(git ls-remote origin main 2>/dev/null | cut -f1)
LOCAL_COMMIT=$(git rev-parse HEAD 2>/dev/null)
if [ "$REMOTE_COMMIT" = "$LOCAL_COMMIT" ]; then
    echo -e "${GREEN}‚úÖ Sim${NC}"
    echo "   ‚îî‚îÄ Commit: ${LOCAL_COMMIT:0:7}"
else
    echo -e "${RED}‚ùå N√£o${NC}"
    echo "   ‚îî‚îÄ Execute: git push -u origin main"
fi

echo ""
echo -e "${BLUE}üåê Para verificar o deploy:${NC}"
echo ""
echo "1. Acesse o Railway Dashboard:"
echo "   ${BLUE}https://railway.app/dashboard${NC}"
echo ""
echo "2. Procure pelo projeto 'fitness-scheduler'"
echo ""
echo "3. Verifique se existe um servi√ßo conectado ao GitHub"
echo ""
echo "4. Se n√£o existir, clique em '+ New' ‚Üí 'GitHub Repo'"
echo "   e conecte: decomontenegro/fitness-scheduler"
echo ""

echo -e "${YELLOW}‚öôÔ∏è  Comandos √∫teis do Railway:${NC}"
echo ""
echo "# Para ver logs do deploy (ap√≥s conectar o servi√ßo):"
echo -e "${GREEN}railway link${NC} (escolha o projeto e servi√ßo)"
echo -e "${GREEN}railway logs${NC}"
echo ""
echo "# Para ver a URL do app:"
echo -e "${GREEN}railway domain${NC}"
echo ""
echo "# Para verificar vari√°veis:"
echo -e "${GREEN}railway variables${NC}"
echo ""

echo -e "${BLUE}üìã Vari√°veis necess√°rias no Railway:${NC}"
cat << 'EOF'

NODE_ENV=production
JWT_SECRET=fitness-scheduler-jwt-super-secure-production-key-2024
JWT_EXPIRES_IN=1h
NEXTAUTH_SECRET=fitness-scheduler-nextauth-production-secret-2024
ENCRYPTION_KEY=fitness-scheduler-encryption-production-key-32

EOF

echo -e "${GREEN}üîë Credenciais de teste (ap√≥s deploy):${NC}"
echo "  Trainer: trainer@test.com / 123456"
echo "  Cliente: client@test.com / 123456"
echo ""

# Tentar obter mais informa√ß√µes
echo -e "${YELLOW}üîç Tentando obter mais informa√ß√µes...${NC}"
echo ""

# Verificar se railway CLI est√° conectado a um servi√ßo
if railway whoami > /dev/null 2>&1; then
    echo -e "Usu√°rio Railway: ${GREEN}$(railway whoami)${NC}"
else
    echo -e "${RED}Railway CLI n√£o est√° logado${NC}"
    echo "Execute: railway login"
fi

echo ""
echo -e "${BLUE}üìå Status atual:${NC}"
echo "- C√≥digo commitado e enviado para GitHub ‚úÖ"
echo "- Aguardando conex√£o com Railway no dashboard"
echo "- Acesse: https://railway.app/dashboard"
echo ""